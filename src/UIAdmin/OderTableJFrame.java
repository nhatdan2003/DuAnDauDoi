/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UIAdmin;

import Entity.*;
import Utils.*;
import DAO.*;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Array;
import java.util.*;
import javax.swing.*;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dantr
 */
public class OderTableJFrame extends javax.swing.JFrame {

	/**
	 * Creates new form OderTableJFrame
	 */
	TypeProductDAO typeDao = new TypeProductDAO();
	ProductDAO pdDAO = new ProductDAO();
	PromotionDAO promoDAO = new PromotionDAO();
	TableDAO tbDAO = new TableDAO();
	OrderDAO odDAO = new OrderDAO();
	OrderDetailDAO oddDAO = new OrderDetailDAO();
	BillProductDAO bpDAO = new BillProductDAO();
	BillDetailsDAO bdDAO = new BillDetailsDAO();

	static JComboBox<Promotions> cboPro = new JComboBox<>();
	private List<Product> pdList;

	private orderCart odCart;

	private HashMap<String, orderCart> listCart;

	DefaultListModel listModel;

	DefaultTableModel tblModel;

	private static int row = -1;//Kiểm tra TABLE có selected chưa
	private static int addMenu = -1; //kiểm tra JLIST có selected chưa
	private static boolean save = true;//kiểm tra có save chưa 

	public OderTableJFrame() {
		initComponents();
		init();

	}

	OderTableJFrame(String tableID, boolean b) {
		initComponents();
		init();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane4 = new javax.swing.JScrollPane();
                jTable1 = new javax.swing.JTable();
                jPanel2 = new javax.swing.JPanel();
                lblTotal = new javax.swing.JLabel();
                lblBan = new javax.swing.JLabel();
                lblUserName = new javax.swing.JLabel();
                lblDate = new javax.swing.JLabel();
                jPanel3 = new javax.swing.JPanel();
                lblSubTotal = new javax.swing.JLabel();
                lblDiscount = new javax.swing.JLabel();
                lblTotal1 = new javax.swing.JLabel();
                lblSub1 = new javax.swing.JLabel();
                lblSub2 = new javax.swing.JLabel();
                lblSub3 = new javax.swing.JLabel();
                btnQuantity = new javax.swing.JButton();
                btnAddTo = new javax.swing.JButton();
                btnDeleteBill = new javax.swing.JButton();
                txtSearch = new javax.swing.JTextField();
                cboType1 = new javax.swing.JComboBox<>();
                btnShowAll = new javax.swing.JButton();
                jScrollPane1 = new javax.swing.JScrollPane();
                tblOder = new javax.swing.JTable();
                jScrollPane3 = new javax.swing.JScrollPane();
                ListMenu = new javax.swing.JList<>();
                btnRemove = new javax.swing.JButton();
                btnPromo = new javax.swing.JButton();
                btnBack = new javax.swing.JButton();
                btnCash = new javax.swing.JButton();
                jPanel4 = new javax.swing.JPanel();
                lbImage = new javax.swing.JLabel();
                btnUp = new javax.swing.JButton();
                btnDown = new javax.swing.JButton();

                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                jScrollPane4.setViewportView(jTable1);

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setBackground(new java.awt.Color(255, 255, 255));

                jPanel2.setBackground(new java.awt.Color(255, 255, 255));
                jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

                lblTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                lblTotal.setForeground(new java.awt.Color(0, 204, 0));
                lblTotal.setText("0 VNĐ");

                lblBan.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                lblBan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                lblBan.setText("ORDER");

                lblUserName.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
                lblUserName.setForeground(new java.awt.Color(255, 102, 255));
                lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                lblUserName.setText("kiethv");

                lblDate.setBackground(new java.awt.Color(204, 204, 204));
                lblDate.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
                lblDate.setForeground(new java.awt.Color(204, 204, 204));
                lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                lblDate.setText("dd/mm/yyyy 00:00:00");
                lblDate.setAlignmentX(0.5F);

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(55, 55, 55)
                                                .addComponent(lblBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(8, 8, 8))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap())
                );
                jPanel2Layout.setVerticalGroup(
                        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblBan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblUserName)
                                                .addGap(23, 23, 23)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addComponent(lblTotal))
                );

                jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                lblSubTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                lblSubTotal.setText("0 VNĐ");

                lblDiscount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                lblDiscount.setForeground(new java.awt.Color(255, 51, 51));
                lblDiscount.setText("0.0%");

                lblTotal1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                lblTotal1.setForeground(new java.awt.Color(0, 204, 0));
                lblTotal1.setText("0 VNĐ");

                lblSub1.setBackground(new java.awt.Color(153, 153, 153));
                lblSub1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                lblSub1.setForeground(new java.awt.Color(153, 153, 153));
                lblSub1.setText("Sub total:");

                lblSub2.setBackground(new java.awt.Color(153, 153, 153));
                lblSub2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                lblSub2.setForeground(new java.awt.Color(153, 153, 153));
                lblSub2.setText("Discount:");

                lblSub3.setBackground(new java.awt.Color(153, 153, 153));
                lblSub3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                lblSub3.setForeground(new java.awt.Color(153, 153, 153));
                lblSub3.setText("Total:");

                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblSub2)
                                        .addComponent(lblSub3)
                                        .addComponent(lblSub1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(117, 117, 117)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblDiscount)
                                        .addComponent(lblTotal1)
                                        .addComponent(lblSubTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );
                jPanel3Layout.setVerticalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblSub1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblSub2)
                                        .addComponent(lblDiscount))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblTotal1)
                                        .addComponent(lblSub3))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                btnQuantity.setBackground(new java.awt.Color(255, 153, 255));
                btnQuantity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                btnQuantity.setForeground(new java.awt.Color(0, 0, 0));
                btnQuantity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/QUANTITY.PNG"))); // NOI18N
                btnQuantity.setText("QUANTITY");
                btnQuantity.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnQuantityActionPerformed(evt);
                        }
                });

                btnAddTo.setBackground(new java.awt.Color(51, 255, 51));
                btnAddTo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                btnAddTo.setForeground(new java.awt.Color(0, 0, 0));
                btnAddTo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add.png"))); // NOI18N
                btnAddTo.setText("ADD TO");
                btnAddTo.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAddToActionPerformed(evt);
                        }
                });

                btnDeleteBill.setBackground(new java.awt.Color(255, 0, 0));
                btnDeleteBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnDeleteBill.setForeground(new java.awt.Color(0, 0, 0));
                btnDeleteBill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Xoa (1).png"))); // NOI18N
                btnDeleteBill.setText("DELETE BILL");
                btnDeleteBill.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDeleteBillActionPerformed(evt);
                        }
                });

                txtSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(179, 0, 134)));
                txtSearch.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                txtSearchActionPerformed(evt);
                        }
                });
                txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                txtSearchKeyReleased(evt);
                        }
                });

                cboType1.setBackground(new java.awt.Color(255, 255, 255));
                cboType1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                cboType1.setForeground(new java.awt.Color(255, 102, 255));
                cboType1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
                cboType1.setOpaque(true);

                btnShowAll.setBackground(new java.awt.Color(255, 153, 255));
                btnShowAll.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnShowAll.setForeground(new java.awt.Color(255, 255, 255));
                btnShowAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/List (2).png"))); // NOI18N
                btnShowAll.setText("SHOW ALL");
                btnShowAll.setMaximumSize(new java.awt.Dimension(111, 51));
                btnShowAll.setMinimumSize(new java.awt.Dimension(111, 51));
                btnShowAll.setPreferredSize(new java.awt.Dimension(111, 51));
                btnShowAll.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnShowAllActionPerformed(evt);
                        }
                });

                tblOder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                tblOder.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "ID", "ProductName", "Price", "Quantity", "Total"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                tblOder.setRowHeight(25);
                tblOder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tblOderMouseClicked(evt);
                        }
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                tblOderMouseReleased(evt);
                        }
                });
                jScrollPane1.setViewportView(tblOder);
                if (tblOder.getColumnModel().getColumnCount() > 0) {
                        tblOder.getColumnModel().getColumn(0).setMinWidth(60);
                        tblOder.getColumnModel().getColumn(0).setPreferredWidth(60);
                        tblOder.getColumnModel().getColumn(0).setMaxWidth(60);
                        tblOder.getColumnModel().getColumn(2).setMinWidth(120);
                        tblOder.getColumnModel().getColumn(2).setPreferredWidth(120);
                        tblOder.getColumnModel().getColumn(2).setMaxWidth(120);
                        tblOder.getColumnModel().getColumn(3).setMinWidth(80);
                        tblOder.getColumnModel().getColumn(3).setPreferredWidth(80);
                        tblOder.getColumnModel().getColumn(3).setMaxWidth(80);
                }

                ListMenu.setBackground(new java.awt.Color(255, 255, 255));
                ListMenu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 255)));
                ListMenu.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                ListMenu.setForeground(new java.awt.Color(255, 51, 255));
                ListMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                ListMenuMouseClicked(evt);
                        }
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                ListMenuMouseReleased(evt);
                        }
                });
                jScrollPane3.setViewportView(ListMenu);

                btnRemove.setBackground(new java.awt.Color(255, 153, 153));
                btnRemove.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                btnRemove.setForeground(new java.awt.Color(0, 0, 0));
                btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/REMOVE.PNG"))); // NOI18N
                btnRemove.setText("REMOVE");
                btnRemove.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnRemoveActionPerformed(evt);
                        }
                });

                btnPromo.setBackground(new java.awt.Color(255, 153, 255));
                btnPromo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                btnPromo.setForeground(new java.awt.Color(0, 0, 0));
                btnPromo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/promo (1).png"))); // NOI18N
                btnPromo.setText("PROMO");
                btnPromo.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnPromoActionPerformed(evt);
                        }
                });

                btnBack.setBackground(new java.awt.Color(255, 255, 255));
                btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnBack.setForeground(new java.awt.Color(255, 0, 255));
                btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Back.png"))); // NOI18N
                btnBack.setText("BACK");
                btnBack.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnBackActionPerformed(evt);
                        }
                });

                btnCash.setBackground(new java.awt.Color(51, 255, 51));
                btnCash.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnCash.setForeground(new java.awt.Color(0, 0, 0));
                btnCash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cash.png"))); // NOI18N
                btnCash.setText("CASH");
                btnCash.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnCashActionPerformed(evt);
                        }
                });

                jPanel4.setBackground(new java.awt.Color(255, 255, 255));
                jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                jPanel4.setToolTipText("");
                jPanel4.setMaximumSize(new java.awt.Dimension(130, 139));
                jPanel4.setMinimumSize(new java.awt.Dimension(130, 139));

                lbImage.setForeground(new java.awt.Color(153, 153, 153));
                lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                lbImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/khoaitaychien.jpg"))); // NOI18N
                lbImage.setText("X");
                lbImage.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                lbImageMouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
                jPanel4.setLayout(jPanel4Layout);
                jPanel4Layout.setHorizontalGroup(
                        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, Short.MAX_VALUE)
                );
                jPanel4Layout.setVerticalGroup(
                        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                btnUp.setBackground(new java.awt.Color(255, 255, 255));
                btnUp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                btnUp.setForeground(new java.awt.Color(0, 0, 0));
                btnUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/up (2).png"))); // NOI18N
                btnUp.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
                btnUp.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnUpActionPerformed(evt);
                        }
                });

                btnDown.setBackground(new java.awt.Color(255, 255, 255));
                btnDown.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
                btnDown.setForeground(new java.awt.Color(0, 0, 0));
                btnDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/down.png"))); // NOI18N
                btnDown.setBorder(null);
                btnDown.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnDownActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cboType1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnAddTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(btnDeleteBill, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                                                        .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnCash, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                                .addComponent(btnPromo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(btnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(jScrollPane1)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(btnUp, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                                                        .addComponent(btnDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(cboType1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, Short.MAX_VALUE)
                                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(14, 14, 14)
                                                .addComponent(btnAddTo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(btnDeleteBill, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(btnPromo, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                                                                        .addComponent(btnQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(btnCash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(6, 6, 6))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane3)
                                                .addContainerGap())))
                );

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

        private void ListMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListMenuMouseReleased
		// TODO add your handling code here:
		Product pd = pdList.get(ListMenu.getSelectedIndex());
		addMenu = ListMenu.getSelectedIndex();
		updateStatus();
		setImage(pd);

        }//GEN-LAST:event_ListMenuMouseReleased

        private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
		// TODO add your handling code here:
		searchProduct();
        }//GEN-LAST:event_txtSearchActionPerformed

        private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
		// TODO add your handling code here:
		searchProduct();
        }//GEN-LAST:event_txtSearchKeyReleased

        private void btnQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuantityActionPerformed
		// TODO add your handling code here:
		resetQuantity();
        }//GEN-LAST:event_btnQuantityActionPerformed

        private void lbImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbImageMouseClicked
		// TODO add your handling code here:

        }//GEN-LAST:event_lbImageMouseClicked

        private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
		// TODO add your handling code here:
		loadDataToJList();
        }//GEN-LAST:event_btnShowAllActionPerformed

        private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
		// TODO add your handling code here:
		btnUpListToTable();
        }//GEN-LAST:event_btnUpActionPerformed

        private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
		// TODO add your handling code here:
		btnDownListToTable();
        }//GEN-LAST:event_btnDownActionPerformed

        private void btnAddToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToActionPerformed
		// TODO add your handling code here:
		upListToTable();
        }//GEN-LAST:event_btnAddToActionPerformed

        private void btnPromoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromoActionPerformed
		// TODO add your handling code here:
		fillCboPromoToDiscount();
        }//GEN-LAST:event_btnPromoActionPerformed

        private void tblOderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOderMouseClicked
		// TODO add your handling code here:
		row = tblOder.getSelectedRow();
		updateStatus();
        }//GEN-LAST:event_tblOderMouseClicked

        private void ListMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListMenuMouseClicked
		// TODO add your handling code here:

        }//GEN-LAST:event_ListMenuMouseClicked

        private void tblOderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOderMouseReleased
		// TODO add your handling code here:
		row = tblOder.getSelectedRow();
		updateStatus();
        }//GEN-LAST:event_tblOderMouseReleased

        private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
		// TODO add your handling code here:
		removeMenuFromTable();
        }//GEN-LAST:event_btnRemoveActionPerformed

        private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
		// TODO add your handling code here:
		btnBack();
        }//GEN-LAST:event_btnBackActionPerformed

        private void btnDeleteBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBillActionPerformed
		// TODO add your handling code here:
		resetOrDeleteOrder();
		updateStatus();
        }//GEN-LAST:event_btnDeleteBillActionPerformed

        private void btnCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCashActionPerformed
		// TODO add your handling code here:
		cashOrder(); //!IMPORTANT 
		odCart = new orderCart();
		fillToTable();
		updateStatus();
        }//GEN-LAST:event_btnCashActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(OderTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(OderTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(OderTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(OderTableJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new OderTableJFrame().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JList<String> ListMenu;
        private javax.swing.JButton btnAddTo;
        private javax.swing.JButton btnBack;
        private javax.swing.JButton btnCash;
        private javax.swing.JButton btnDeleteBill;
        private javax.swing.JButton btnDown;
        private javax.swing.JButton btnPromo;
        private javax.swing.JButton btnQuantity;
        private javax.swing.JButton btnRemove;
        private javax.swing.JButton btnShowAll;
        private javax.swing.JButton btnUp;
        private javax.swing.JComboBox<String> cboType1;
        private javax.swing.JPanel jPanel2;
        private javax.swing.JPanel jPanel3;
        private javax.swing.JPanel jPanel4;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JScrollPane jScrollPane4;
        private javax.swing.JTable jTable1;
        private javax.swing.JLabel lbImage;
        private javax.swing.JLabel lblBan;
        private javax.swing.JLabel lblDate;
        private javax.swing.JLabel lblDiscount;
        private javax.swing.JLabel lblSub1;
        private javax.swing.JLabel lblSub2;
        private javax.swing.JLabel lblSub3;
        private javax.swing.JLabel lblSubTotal;
        private javax.swing.JLabel lblTotal;
        private javax.swing.JLabel lblTotal1;
        private javax.swing.JLabel lblUserName;
        private javax.swing.JTable tblOder;
        private javax.swing.JTextField txtSearch;
        // End of variables declaration//GEN-END:variables

	private void init() {
                                    setIconImage(ShareHelper.APP_ICON);
		pdList = new ArrayList<>();
		odCart = new orderCart();
		listCart = new HashMap<>();
		this.getContentPane().setBackground(Color.WHITE);
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);
		lblDate.setText(XDate.toString(XDate.now(), "dd-MM-yyyy hh:mm aa"));
		System.out.println(XDate.toDate(lblDate.getText().substring(0, lblDate.getText().indexOf(" ")), "dd-MM-yyyy").toString());
		fillCboType();
		fillCboPromo();
		loadDataToJList();
		cboType1.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent event) {
				if (event.getStateChange() == ItemEvent.SELECTED) {
					fillToTableCbo();

				}
			}

		});
		cboPro.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent event) {
				if (event.getStateChange() == ItemEvent.SELECTED) {
					fillToDiscount();
				}
			}

		});
		tblOder.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		System.out.println(Auth.userName.toString().substring(Auth.userName.toString().lastIndexOf(" ") + 1));
	}

	private void setImage(Product pd) {
		if (pd.getImage() != null) {
			this.lbImage.setToolTipText(pd.getImage());
			this.lbImage.setIcon(XImage.read(pd.getImage()));
		}
	}

	//Tải dữ liệu tự database vào JLIST
	private void loadDataToJList() {
		listModel = new DefaultListModel();
		try {
			pdList = this.pdDAO.selectAll();
			for (Product pd : pdList) {
				listModel.addElement(pd);

			}

			ListMenu.setModel(listModel);
			txtSearch.setText("");
			updateStatus();
		} catch (Exception e) {
			MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
		}

	}

	//Tải từ list vào table đã order
	private void upListToTable() {
		int j = 0;
		while (j == 0) {
			try {
				int quantity = 0;
				String sl = MsgBox.prompt(this, "ENTER Quantity:");

				if (sl.isEmpty()) {
					return;
				} else {

					quantity = Integer.parseInt(sl);
					if (quantity < 0) {
						MsgBox.alert(this, "Wrong!");
						return;
					}
					j++;
				}
				try {
					Product pd = pdList.get(ListMenu.getSelectedIndex());

					ProductDTO pdDTO = new ProductDTO(pd, quantity);

					this.odCart.addProductDTO(pdDTO);
					if (odCart.getCartDetails().get(pdDTO.getPd().getIdProduct()).getQuantity() <= 0) {
						odCart.removeProduct(pdDTO.getPd().getIdProduct());
						row = -1;
					}
					row = -1;
					addMenu = -1;
					fillToTable();
					updateStatus();

				} catch (Exception e) {
					MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
				}
			} catch (Exception e) {
				return;
			}
		}

	}

	//Tăng quantity từ đối tượng chọn ở table
	private void btnUpListToTable() {
		row = tblOder.getSelectedRow();
		try {
			Product pd = pdDAO.selectById(tblOder.getValueAt(row, 0).toString());
			int quantity = 1;

			ProductDTO pdDTO = new ProductDTO(pd, quantity);

			this.odCart.addProductDTO(pdDTO);
			if (odCart.getCartDetails().get(pdDTO.getPd().getIdProduct()).getQuantity() <= 0) {
				odCart.removeProduct(pdDTO.getPd().getIdProduct());
			}
			fillToTable();
			tblOder.setRowSelectionInterval(row, row);
			updateStatus();
		} catch (Exception e) {
			MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
		}
	}

	//Giảm quantity từ đối tượng chọn ở table
	private void btnDownListToTable() {

		try {
			Product pd = pdDAO.selectById(tblOder.getValueAt(row, 0).toString());
			int quantity = -1;

			ProductDTO pdDTO = new ProductDTO(pd, quantity);

			this.odCart.addProductDTO(pdDTO);
			if (odCart.getCartDetails().get(pdDTO.getPd().getIdProduct()).getQuantity() <= 0) {
				odCart.removeProduct(pdDTO.getPd().getIdProduct());
				row = -1;
				fillToTable();
				updateStatus();
				return;
			}

			fillToTable();
			tblOder.setRowSelectionInterval(row, row);
			updateStatus();

		} catch (Exception e) {
			MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
		}
	}

	//Fill từ HASHMAP lên table
	private void fillToTable() {
		tblModel = (DefaultTableModel) tblOder.getModel();
		tblModel.setRowCount(0);

		Set<String> keySet = odCart.getCartDetails().keySet();
		for (String key : keySet) {
			Product pd = odCart.getCartDetails().get(key).getPd();
			int quantity = odCart.getCartDetails().get(key).getQuantity();
			Object[] row = {
				pd.getIdProduct(),
				pd.getProductName(),
				MoneyFormater.VNDFormat(pd.getPrice()),
				quantity,
				(MoneyFormater.VNDFormat(pd.getPrice() * quantity))
			};
			tblModel.addRow(row);
		}
		tblOder.setModel(tblModel);
		updateStatus();
	}

	//TÌM KIẾM SẢN PHẨM
	private void searchProduct() {
		listModel.removeAllElements();
		//Lấy giá trị từ textf
		String search = txtSearch.getText();
		double num;
		//Chuyển String thành số để sql ko bị lỗi
		try {
			num = Double.parseDouble(search);
		} catch (Exception e) {
			num = 0;
		}
		//Excus câu lệnh sql
		try {
			pdList = this.pdDAO.searchSQL(search, num);
			for (Product pd : pdList) {
				listModel.addElement(pd);
			}
			ListMenu.setModel(listModel);

		} catch (Exception e) {
			MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
		}

	}

	//Từ LOẠI CBO lên JLIST
	private void fillToTableCbo() {

		ProductType pt = (ProductType) this.cboType1.getSelectedItem();
		listModel.removeAllElements();
		try {
			this.pdList = this.pdDAO.selectByType(pt.getIDType());
			for (Product pd : pdList) {
				listModel.addElement(pd);

			}
			ListMenu.setModel(listModel);
		} catch (Exception e) {
			MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
		}
	}

	//FIll dữ liệu lên CBO LOẠI
	private void fillCboType() {
		DefaultComboBoxModel<ProductType> model1 = (DefaultComboBoxModel) this.cboType1.getModel();
		model1.removeAllElements();
		List<ProductType> list = this.typeDao.selectAll();

		for (ProductType pd : list) {
			model1.addElement(pd);
		}
	}

	//FIll dữ liệu lên CBO KHUYẾN MÃI
	private void fillCboPromo() {
		cboPro.removeAllItems();
		List<Promotions> list = this.promoDAO.selectAll();

		for (Promotions pro : list) {
			cboPro.addItem(pro);
		}
	}

	//Từ LOẠI CBO lên JLIST
	private void fillToDiscount() {

		Promotions pm = (Promotions) this.cboPro.getSelectedItem();
		try {
			Promotions promo = this.promoDAO.selectById(pm.getIdPromo());
			double disc = promo.getDiscountPromo();

			lblDiscount.setText(String.valueOf(disc * 100) + "%");

		} catch (Exception e) {
			MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
		}
		updateStatus();
	}

	private void fillCboPromoToDiscount() {
		fillCboPromo();
		MsgBox.cbobox(this, "Select promotions", cboPro);
	}

	private void removeMenuFromTable() {
		if (MsgBox.confirm(this, "Are you sure for REMOVE")) {
			String idPd = tblOder.getValueAt(this.row, 0).toString();
			odCart.removeProduct(idPd);
			fillToTable();
		}

	}

	private void resetQuantity() {
		String idPd = tblOder.getValueAt(this.row, 0).toString();
		try {
			int quantity = 0;
			String sl = MsgBox.prompt(this, "ENTER Quantity:");

			if (sl.isEmpty()) {
				return;
			} else {

				quantity = Integer.parseInt(sl);
				if (quantity < 0) {
					MsgBox.alert(this, "Wrong!");
					return;
				}
			}
			try {
				Product pd = pdDAO.selectById(idPd);

				ProductDTO pdDTO = new ProductDTO(pd, quantity);

				odCart.getCartDetails().get(pdDTO.getPd().getIdProduct()).setQuantity(quantity);

				if (odCart.getCartDetails().get(pdDTO.getPd().getIdProduct()).getQuantity() <= 0) {
					odCart.removeProduct(pdDTO.getPd().getIdProduct());
					row = -1;
				}
				row = -1;
				addMenu = -1;
				fillToTable();
				updateStatus();

			} catch (Exception e) {
				MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
			}
		} catch (Exception e) {
			return;
		}
	}

	//Lấy đối tượng ORDERDETAILS
	private List<OrderDetails> getOrderDetails(String idOrder) {
		List<OrderDetails> oddList = new ArrayList<>();
		for (int i = 0; i < tblOder.getRowCount(); i++) {
			OrderDetails odd = new OrderDetails();
			odd.setIdProduct(tblOder.getValueAt(i, 0).toString());
			odd.setIdOrder(idOrder);
			odd.setQuantity(Integer.parseInt(tblOder.getValueAt(i, 3).toString()));
			odd.setTotalPrice(MoneyFormater.DoubleFormat(tblOder.getValueAt(i, 4).toString()));
			odd.setTimeOD(XDate.toDate(lblDate.getText().substring(0, lblDate.getText().indexOf(" ")), "dd-MM-yyyy"));

			oddList.add(odd);

		}

		return oddList;
	}

	//Lấy đối tượng ORDER
	private Order getOrder() {
		List<Order> listOD = new ArrayList<>();
		listOD = odDAO.selectAll();
		Order od = new Order();
		od.setIdOrder("DH" + (listOD.size() + 1));
		od.setDateOrder(XDate.toDate(lblDate.getText().substring(0, lblDate.getText().indexOf(" ")), "dd-MM-yyyy"));
		od.setTimeOrder(lblDate.getText().substring(lblDate.getText().indexOf(" "), lblDate.getText().lastIndexOf(" ")));
		od.setIdPromo(cboPro.getSelectedItem().toString().substring(0, cboPro.getSelectedItem().toString().indexOf(" ")));
		od.setTotalPrice(MoneyFormater.DoubleFormat(lblTotal.getText()));
		od.setUserName(Auth.userName.toString().substring(Auth.userName.toString().lastIndexOf(" ") + 1));

		return od;
	}

	//Lấy đổi tượng BillProduct
	private List<BillProduct> getBillProduct(String idOrder) {
		List<BillProduct> bpList = new ArrayList<>();
		for (int i = 0; i < tblOder.getRowCount(); i++) {
			BillProduct bp = new BillProduct();
			bp.setIDOrder(idOrder);
			bp.setProductName(tblOder.getValueAt(i, 1).toString());
			bp.setQuantity(Integer.parseInt(tblOder.getValueAt(i, 3).toString()));
			bp.setPrice(MoneyFormater.DoubleFormat(tblOder.getValueAt(i, 2).toString()));
			bp.setIntoMoney(MoneyFormater.DoubleFormat(tblOder.getValueAt(i, 4).toString()));
			bpList.add(bp);
		}

		return bpList;
	}

	//Lấy đối tượng BillDetail
	private BillDetail getBillDetail(String idOrder) {
		BillDetail bd = new BillDetail();
		bd.setIDorder(idOrder);
		bd.setTimeOrder(lblDate.getText().substring(lblDate.getText().indexOf(" "), lblDate.getText().lastIndexOf(" ")));
		bd.setUsername(Auth.userName.toString().substring(Auth.userName.toString().lastIndexOf(" ") + 1));
		bd.setDateOrder(XDate.toDate(lblDate.getText().substring(0, lblDate.getText().indexOf(" ")), "dd-MM-yyyy"));
		bd.setSubTotal(MoneyFormater.DoubleFormat(lblSubTotal.getText()));
		String idPromo = cboPro.getSelectedItem().toString().substring(0, cboPro.getSelectedItem().toString().indexOf(" "));
		bd.setDiscountPromo(promoDAO.selectById(idPromo).getDiscountPromo());
		bd.setTotal(MoneyFormater.DoubleFormat(lblTotal.getText()));
		bd.setPay(0.0);
		bd.setReadyCash(0.0);
		bd.setPayMent(0.0);

		return bd;
	}

	//Lưu hoá đơn lên DATABASE
	private void cashOrder() {
		//kiểm tra hoá đơn đã tồn tại trong database hay chưa
		try {
			//Tạo order và insert
			Order od = getOrder();
			odDAO.insert(od);
			try {
				//Tạo List OrderDetail và insert 
				List<OrderDetails> oddList = getOrderDetails(od.getIdOrder());
				oddDAO.insertLIST(oddList);
			} catch (Exception e) {
				System.out.println(e);
				MsgBox.alert(this, "loi OrderDetail ne");
			}
			//Tạo List BillProduct và insert
			try {
				List<BillProduct> bpList = getBillProduct(od.getIdOrder());
				bpDAO.insertLIST(bpList);
			} catch (Exception e) {
				System.out.println(e);
				MsgBox.alert(this, "loi BillProduct ne");
			}

			try {
				//Tạo BillDetail và insert
				BillDetail bd = getBillDetail(od.getIdOrder());
				bdDAO.insert(bd);
			} catch (Exception e) {
				System.out.println(e);
				MsgBox.alert(this, "loi BillDetail ne");
			}

			save = true;
			MsgBox.alert(this, "Success!");

		} catch (Exception e) {
			MsgBox.alert(this, "loi Order ne");
			System.out.println(e);
		}
	}

	//DELETE ORDER OR RESETỎRDER
	private void resetOrDeleteOrder() {
		if (MsgBox.confirm(this, "Are you sure for DELETE this Order")) {
			odCart = new orderCart();
			fillToTable();
		}
	}

	//FILL DỮ LIỆU LÊN CÁC LABEL
	private void updateStatus() {
		//Set User
		lblUserName.setText(String.valueOf(Auth.userName));
		//Tìm Sub Total
		Double subTotal = 0.0;
		System.out.println(tblOder.getRowCount());
		for (int i = 0; i < tblOder.getRowCount(); i++) {
			try {
				subTotal += MoneyFormater.DoubleFormat((String) tblOder.getValueAt(i, 4));
			} catch (Exception e) {
				System.out.println(e);
			}
		}
		lblSubTotal.setText(MoneyFormater.VNDFormat(subTotal));
		//Tìm giảm giá
		Double disc = Double.parseDouble(lblDiscount.getText().replace("%", "")) / 100;
		//Tìm Total
		Double total = subTotal - (subTotal * disc);
		lblTotal.setText(MoneyFormater.VNDFormat(total));
		lblTotal1.setText(MoneyFormater.VNDFormat(total));
		//SETUP các button
		save = false;
		boolean edit = (this.row >= 0);
		boolean them = (this.addMenu >= 0);
		this.btnDown.setEnabled(edit);
		this.btnUp.setEnabled(edit);
		this.btnRemove.setEnabled(edit);
		this.btnQuantity.setEnabled(edit);
		this.btnAddTo.setEnabled(them);

	}

	private void btnBack() {
		this.dispose();
		new MainJFrame(this, true).setVisible(true);
	}

}
